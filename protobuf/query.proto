/*构建方法
python -m grpc_tools.protoc --proto_path=./proto --python_out=./DataBase --grpc_python_out=./DataBase query.proto
*/

syntax = "proto3";

// ======= 最近邻查询 =======
// 查询请求
message NearestQueryRequest {
    int32 position_x = 1;
    int32 position_y = 2;
    int32 query_num = 3;  // 查询的最近k个点
}

// 单个距离查询结果的数据结构
message DisResult {
    float distance = 1; // 与Q点的距离
}

// 距离查询响应
message DisResponse {
    repeated DisResult results = 1;
}

// 联邦数据库指示数据库返回 k个点的距离
message NumRequest {
    int32 need_num = 1;  // 查询返回的点的数
}

// ======= 反向最近邻查询 =======
// 查询请求
message AntiNearestQueryRequest {
    int32 position_x = 1;
    int32 position_y = 2;
}

// ======= 查询结果 =======
// 小型数据库返回的查询结果的数据结构
message QueryResult {
    int32 position_x = 1;
    int32 position_y = 2;
    int32 database_id = 3;
}

// 小型数据库返回的查询结果
message QueryResponse {
    repeated QueryResult results = 1;
}


// 服务定义
service FederatedDatabaseService {
    // 最近邻查询的信道
    rpc QueryDistance (NearestQueryRequest) returns (DisResponse);
    rpc QueryNeedNum (NumRequest) returns (QueryResponse);
    // 反向最近邻查询的信道
    rpc AntiNearestQuery (AntiNearestQueryRequest) returns (QueryResponse);
}


